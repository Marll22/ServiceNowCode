/*!
 * Sizzle CSS Selector Engine v1.10.18
 * http://sizzlejs.com/
 *
 * Copyright 2013 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2014-02-05
 */
(function (av) {
  var D,
    ay,
    t,
    M,
    P,
    ab,
    ax,
    aC,
    N,
    ac,
    ae,
    H,
    u,
    an,
    ai,
    aw,
    k,
    K,
    ap = 'sizzle' + -new Date(),
    O = av.document,
    az = 0,
    aj = 0,
    d = F(),
    ao = F(),
    L = F(),
    J = function (i, e) {
      if (i === e) {
        ac = true;
      }
      return 0;
    },
    au = typeof undefined,
    V = 1 << 31,
    T = {}.hasOwnProperty,
    ar = [],
    at = ar.pop,
    R = ar.push,
    b = ar.push,
    s = ar.slice,
    j =
      ar.indexOf ||
      function (aE) {
        var aD = 0,
          e = this.length;
        for (; aD < e; aD++) {
          if (this[aD] === aE) {
            return aD;
          }
        }
        return -1;
      },
    c =
      'checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped',
    v = '[\\x20\\t\\r\\n\\f]',
    a = '(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+',
    Q = a.replace('w', 'w#'),
    al =
      '\\[' +
      v +
      '*(' +
      a +
      ')' +
      v +
      '*(?:([*^$|!~]?=)' +
      v +
      '*(?:([\'"])((?:\\\\.|[^\\\\])*?)\\3|(' +
      Q +
      ')|)|)' +
      v +
      '*\\]',
    q =
      ':(' +
      a +
      ')(?:\\((([\'"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|' +
      al.replace(3, 8) +
      ')*)|.*)\\)|)',
    x = new RegExp('^' + v + '+|((?:^|[^\\\\])(?:\\\\.)*)' + v + '+$', 'g'),
    A = new RegExp('^' + v + '*,' + v + '*'),
    G = new RegExp('^' + v + '*([>+~]|' + v + ')' + v + '*'),
    z = new RegExp('=' + v + '*([^\\]\'"]*?)' + v + '*\\]', 'g'),
    X = new RegExp(q),
    Z = new RegExp('^' + Q + '$'),
    ah = {
      ID: new RegExp('^#(' + a + ')'),
      CLASS: new RegExp('^\\.(' + a + ')'),
      TAG: new RegExp('^(' + a.replace('w', 'w*') + ')'),
      ATTR: new RegExp('^' + al),
      PSEUDO: new RegExp('^' + q),
      CHILD: new RegExp(
        '^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(' +
          v +
          '*(even|odd|(([+-]|)(\\d*)n|)' +
          v +
          '*(?:([+-]|)' +
          v +
          '*(\\d+)|))' +
          v +
          '*\\)|)',
        'i'
      ),
      bool: new RegExp('^(?:' + c + ')$', 'i'),
      needsContext: new RegExp(
        '^' +
          v +
          '*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(' +
          v +
          '*((?:-\\d)?\\d*)' +
          v +
          '*\\)|)(?=[^-]|$)',
        'i'
      ),
    },
    h = /^(?:input|select|textarea|button)$/i,
    r = /^h\d$/i,
    U = /^[^{]+\{\s*\[native \w/,
    W = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
    ag = /[+~]/,
    S = /'|\\/g,
    y = new RegExp('\\\\([\\da-f]{1,6}' + v + '?|(' + v + ')|.)', 'ig'),
    ak = function (e, aE, i) {
      var aD = '0x' + aE - 65536;
      return aD !== aD || i
        ? aE
        : aD < 0
        ? String.fromCharCode(aD + 65536)
        : String.fromCharCode((aD >> 10) | 55296, (aD & 1023) | 56320);
    };
  try {
    b.apply((ar = s.call(O.childNodes)), O.childNodes);
    ar[O.childNodes.length].nodeType;
  } catch (I) {
    b = {
      apply: ar.length
        ? function (i, e) {
            R.apply(i, s.call(e));
          }
        : function (aF, aE) {
            var e = aF.length,
              aD = 0;
            while ((aF[e++] = aE[aD++])) {}
            aF.length = e - 1;
          },
    };
  }
  function B(aK, aD, aO, aQ) {
    var aP, aH, aI, aM, aN, aG, aF, e, aE, aL;
    if ((aD ? aD.ownerDocument || aD : O) !== H) {
      ae(aD);
    }
    aD = aD || H;
    aO = aO || [];
    if (!aK || typeof aK !== 'string') {
      return aO;
    }
    if ((aM = aD.nodeType) !== 1 && aM !== 9) {
      return [];
    }
    if (an && !aQ) {
      if ((aP = W.exec(aK))) {
        if ((aI = aP[1])) {
          if (aM === 9) {
            aH = aD.getElementById(aI);
            if (aH && aH.parentNode) {
              if (aH.id === aI) {
                aO.push(aH);
                return aO;
              }
            } else {
              return aO;
            }
          } else {
            if (
              aD.ownerDocument &&
              (aH = aD.ownerDocument.getElementById(aI)) &&
              K(aD, aH) &&
              aH.id === aI
            ) {
              aO.push(aH);
              return aO;
            }
          }
        } else {
          if (aP[2]) {
            b.apply(aO, aD.getElementsByTagName(aK));
            return aO;
          } else {
            if (
              (aI = aP[3]) &&
              ay.getElementsByClassName &&
              aD.getElementsByClassName
            ) {
              b.apply(aO, aD.getElementsByClassName(aI));
              return aO;
            }
          }
        }
      }
      if (ay.qsa && (!ai || !ai.test(aK))) {
        e = aF = ap;
        aE = aD;
        aL = aM === 9 && aK;
        if (aM === 1 && aD.nodeName.toLowerCase() !== 'object') {
          aG = n(aK);
          if ((aF = aD.getAttribute('id'))) {
            e = aF.replace(S, '\\$&');
          } else {
            aD.setAttribute('id', e);
          }
          e = "[id='" + e + "'] ";
          aN = aG.length;
          while (aN--) {
            aG[aN] = e + o(aG[aN]);
          }
          aE = (ag.test(aK) && Y(aD.parentNode)) || aD;
          aL = aG.join(',');
        }
        if (aL) {
          try {
            b.apply(aO, aE.querySelectorAll(aL));
            return aO;
          } catch (aJ) {
          } finally {
            if (!aF) {
              aD.removeAttribute('id');
            }
          }
        }
      }
    }
    return ax(aK.replace(x, '$1'), aD, aO, aQ);
  }
  function F() {
    var i = [];
    function e(aD, aE) {
      if (i.push(aD + ' ') > t.cacheLength) {
        delete e[i.shift()];
      }
      return (e[aD + ' '] = aE);
    }
    return e;
  }
  function p(e) {
    e[ap] = true;
    return e;
  }
  function l(i) {
    var aE = H.createElement('div');
    try {
      return !!i(aE);
    } catch (aD) {
      return false;
    } finally {
      if (aE.parentNode) {
        aE.parentNode.removeChild(aE);
      }
      aE = null;
    }
  }
  function aA(aD, aF) {
    var e = aD.split('|'),
      aE = aD.length;
    while (aE--) {
      t.attrHandle[e[aE]] = aF;
    }
  }
  function f(i, e) {
    var aE = e && i,
      aD =
        aE &&
        i.nodeType === 1 &&
        e.nodeType === 1 &&
        (~e.sourceIndex || V) - (~i.sourceIndex || V);
    if (aD) {
      return aD;
    }
    if (aE) {
      while ((aE = aE.nextSibling)) {
        if (aE === e) {
          return -1;
        }
      }
    }
    return i ? 1 : -1;
  }
  function C(e) {
    return function (aD) {
      var i = aD.nodeName.toLowerCase();
      return i === 'input' && aD.type === e;
    };
  }
  function g(e) {
    return function (aD) {
      var i = aD.nodeName.toLowerCase();
      return (i === 'input' || i === 'button') && aD.type === e;
    };
  }
  function am(e) {
    return p(function (i) {
      i = +i;
      return p(function (aD, aH) {
        var aF,
          aE = e([], aD.length, i),
          aG = aE.length;
        while (aG--) {
          if (aD[(aF = aE[aG])]) {
            aD[aF] = !(aH[aF] = aD[aF]);
          }
        }
      });
    });
  }
  function Y(e) {
    return e && typeof e.getElementsByTagName !== au && e;
  }
  ay = B.support = {};
  P = B.isXML = function (e) {
    var i = e && (e.ownerDocument || e).documentElement;
    return i ? i.nodeName !== 'HTML' : false;
  };
  ae = B.setDocument = function (aD) {
    var e,
      aE = aD ? aD.ownerDocument || aD : O,
      i = aE.defaultView;
    if (aE === H || aE.nodeType !== 9 || !aE.documentElement) {
      return H;
    }
    H = aE;
    u = aE.documentElement;
    an = !P(aE);
    if (i && i !== i.top) {
      if (i.addEventListener) {
        i.addEventListener(
          'unload',
          function () {
            ae();
          },
          false
        );
      } else {
        if (i.attachEvent) {
          i.attachEvent('onunload', function () {
            ae();
          });
        }
      }
    }
    ay.attributes = l(function (aF) {
      aF.className = 'i';
      return !aF.getAttribute('className');
    });
    ay.getElementsByTagName = l(function (aF) {
      aF.appendChild(aE.createComment(''));
      return !aF.getElementsByTagName('*').length;
    });
    ay.getElementsByClassName =
      U.test(aE.getElementsByClassName) &&
      l(function (aF) {
        aF.innerHTML = "<div class='a'></div><div class='a i'></div>";
        aF.firstChild.className = 'i';
        return aF.getElementsByClassName('i').length === 2;
      });
    ay.getById = l(function (aF) {
      u.appendChild(aF).id = ap;
      return !aE.getElementsByName || !aE.getElementsByName(ap).length;
    });
    if (ay.getById) {
      t.find.ID = function (aH, aG) {
        if (typeof aG.getElementById !== au && an) {
          var aF = aG.getElementById(aH);
          return aF && aF.parentNode ? [aF] : [];
        }
      };
      t.filter.ID = function (aG) {
        var aF = aG.replace(y, ak);
        return function (aH) {
          return aH.getAttribute('id') === aF;
        };
      };
    } else {
      delete t.find.ID;
      t.filter.ID = function (aG) {
        var aF = aG.replace(y, ak);
        return function (aI) {
          var aH =
            typeof aI.getAttributeNode !== au && aI.getAttributeNode('id');
          return aH && aH.value === aF;
        };
      };
    }
    t.find.TAG = ay.getElementsByTagName
      ? function (aF, aG) {
          if (typeof aG.getElementsByTagName !== au) {
            return aG.getElementsByTagName(aF);
          }
        }
      : function (aF, aJ) {
          var aK,
            aI = [],
            aH = 0,
            aG = aJ.getElementsByTagName(aF);
          if (aF === '*') {
            while ((aK = aG[aH++])) {
              if (aK.nodeType === 1) {
                aI.push(aK);
              }
            }
            return aI;
          }
          return aG;
        };
    t.find.CLASS =
      ay.getElementsByClassName &&
      function (aG, aF) {
        if (typeof aF.getElementsByClassName !== au && an) {
          return aF.getElementsByClassName(aG);
        }
      };
    aw = [];
    ai = [];
    if ((ay.qsa = U.test(aE.querySelectorAll))) {
      l(function (aF) {
        aF.innerHTML = "<select t=''><option selected=''></option></select>";
        if (aF.querySelectorAll("[t^='']").length) {
          ai.push('[*^$]=' + v + '*(?:\'\'|"")');
        }
        if (!aF.querySelectorAll('[selected]').length) {
          ai.push('\\[' + v + '*(?:value|' + c + ')');
        }
        if (!aF.querySelectorAll(':checked').length) {
          ai.push(':checked');
        }
      });
      l(function (aG) {
        var aF = aE.createElement('input');
        aF.setAttribute('type', 'hidden');
        aG.appendChild(aF).setAttribute('name', 'D');
        if (aG.querySelectorAll('[name=d]').length) {
          ai.push('name' + v + '*[*^$|!~]?=');
        }
        if (!aG.querySelectorAll(':enabled').length) {
          ai.push(':enabled', ':disabled');
        }
        aG.querySelectorAll('*,:x');
        ai.push(',.*:');
      });
    }
    if (
      (ay.matchesSelector = U.test(
        (k =
          u.webkitMatchesSelector ||
          u.mozMatchesSelector ||
          u.oMatchesSelector ||
          u.msMatchesSelector)
      ))
    ) {
      l(function (aF) {
        ay.disconnectedMatch = k.call(aF, 'div');
        k.call(aF, "[s!='']:x");
        aw.push('!=', q);
      });
    }
    ai = ai.length && new RegExp(ai.join('|'));
    aw = aw.length && new RegExp(aw.join('|'));
    e = U.test(u.compareDocumentPosition);
    K =
      e || U.test(u.contains)
        ? function (aG, aF) {
            var aI = aG.nodeType === 9 ? aG.documentElement : aG,
              aH = aF && aF.parentNode;
            return (
              aG === aH ||
              !!(
                aH &&
                aH.nodeType === 1 &&
                (aI.contains
                  ? aI.contains(aH)
                  : aG.compareDocumentPosition &&
                    aG.compareDocumentPosition(aH) & 16)
              )
            );
          }
        : function (aG, aF) {
            if (aF) {
              while ((aF = aF.parentNode)) {
                if (aF === aG) {
                  return true;
                }
              }
            }
            return false;
          };
    J = e
      ? function (aG, aF) {
          if (aG === aF) {
            ac = true;
            return 0;
          }
          var aH = !aG.compareDocumentPosition - !aF.compareDocumentPosition;
          if (aH) {
            return aH;
          }
          aH =
            (aG.ownerDocument || aG) === (aF.ownerDocument || aF)
              ? aG.compareDocumentPosition(aF)
              : 1;
          if (
            aH & 1 ||
            (!ay.sortDetached && aF.compareDocumentPosition(aG) === aH)
          ) {
            if (aG === aE || (aG.ownerDocument === O && K(O, aG))) {
              return -1;
            }
            if (aF === aE || (aF.ownerDocument === O && K(O, aF))) {
              return 1;
            }
            return N ? j.call(N, aG) - j.call(N, aF) : 0;
          }
          return aH & 4 ? -1 : 1;
        }
      : function (aG, aF) {
          if (aG === aF) {
            ac = true;
            return 0;
          }
          var aM,
            aJ = 0,
            aL = aG.parentNode,
            aI = aF.parentNode,
            aH = [aG],
            aK = [aF];
          if (!aL || !aI) {
            return aG === aE
              ? -1
              : aF === aE
              ? 1
              : aL
              ? -1
              : aI
              ? 1
              : N
              ? j.call(N, aG) - j.call(N, aF)
              : 0;
          } else {
            if (aL === aI) {
              return f(aG, aF);
            }
          }
          aM = aG;
          while ((aM = aM.parentNode)) {
            aH.unshift(aM);
          }
          aM = aF;
          while ((aM = aM.parentNode)) {
            aK.unshift(aM);
          }
          while (aH[aJ] === aK[aJ]) {
            aJ++;
          }
          return aJ
            ? f(aH[aJ], aK[aJ])
            : aH[aJ] === O
            ? -1
            : aK[aJ] === O
            ? 1
            : 0;
        };
    return aE;
  };
  B.matches = function (i, e) {
    return B(i, null, null, e);
  };
  B.matchesSelector = function (aD, aF) {
    if ((aD.ownerDocument || aD) !== H) {
      ae(aD);
    }
    aF = aF.replace(z, "='$1']");
    if (
      ay.matchesSelector &&
      an &&
      (!aw || !aw.test(aF)) &&
      (!ai || !ai.test(aF))
    ) {
      try {
        var i = k.call(aD, aF);
        if (
          i ||
          ay.disconnectedMatch ||
          (aD.document && aD.document.nodeType !== 11)
        ) {
          return i;
        }
      } catch (aE) {}
    }
    return B(aF, H, null, [aD]).length > 0;
  };
  B.contains = function (e, i) {
    if ((e.ownerDocument || e) !== H) {
      ae(e);
    }
    return K(e, i);
  };
  B.attr = function (aD, e) {
    if ((aD.ownerDocument || aD) !== H) {
      ae(aD);
    }
    var i = t.attrHandle[e.toLowerCase()],
      aE =
        i && T.call(t.attrHandle, e.toLowerCase()) ? i(aD, e, !an) : undefined;
    return aE !== undefined
      ? aE
      : ay.attributes || !an
      ? aD.getAttribute(e)
      : (aE = aD.getAttributeNode(e)) && aE.specified
      ? aE.value
      : null;
  };
  B.error = function (e) {
    throw new Error('Syntax error, unrecognized expression: ' + e);
  };
  B.uniqueSort = function (aE) {
    var aF,
      aG = [],
      e = 0,
      aD = 0;
    ac = !ay.detectDuplicates;
    N = !ay.sortStable && aE.slice(0);
    aE.sort(J);
    if (ac) {
      while ((aF = aE[aD++])) {
        if (aF === aE[aD]) {
          e = aG.push(aD);
        }
      }
      while (e--) {
        aE.splice(aG[e], 1);
      }
    }
    N = null;
    return aE;
  };
  M = B.getText = function (aG) {
    var aF,
      aD = '',
      aE = 0,
      e = aG.nodeType;
    if (!e) {
      while ((aF = aG[aE++])) {
        aD += M(aF);
      }
    } else {
      if (e === 1 || e === 9 || e === 11) {
        if (typeof aG.textContent === 'string') {
          return aG.textContent;
        } else {
          for (aG = aG.firstChild; aG; aG = aG.nextSibling) {
            aD += M(aG);
          }
        }
      } else {
        if (e === 3 || e === 4) {
          return aG.nodeValue;
        }
      }
    }
    return aD;
  };
  t = B.selectors = {
    cacheLength: 50,
    createPseudo: p,
    match: ah,
    attrHandle: {},
    find: {},
    relative: {
      '>': { dir: 'parentNode', first: true },
      ' ': { dir: 'parentNode' },
      '+': { dir: 'previousSibling', first: true },
      '~': { dir: 'previousSibling' },
    },
    preFilter: {
      ATTR: function (e) {
        e[1] = e[1].replace(y, ak);
        e[3] = (e[4] || e[5] || '').replace(y, ak);
        if (e[2] === '~=') {
          e[3] = ' ' + e[3] + ' ';
        }
        return e.slice(0, 4);
      },
      CHILD: function (e) {
        e[1] = e[1].toLowerCase();
        if (e[1].slice(0, 3) === 'nth') {
          if (!e[3]) {
            B.error(e[0]);
          }
          e[4] = +(e[4]
            ? e[5] + (e[6] || 1)
            : 2 * (e[3] === 'even' || e[3] === 'odd'));
          e[5] = +(e[7] + e[8] || e[3] === 'odd');
        } else {
          if (e[3]) {
            B.error(e[0]);
          }
        }
        return e;
      },
      PSEUDO: function (i) {
        var e,
          aD = !i[5] && i[2];
        if (ah.CHILD.test(i[0])) {
          return null;
        }
        if (i[3] && i[4] !== undefined) {
          i[2] = i[4];
        } else {
          if (
            aD &&
            X.test(aD) &&
            (e = n(aD, true)) &&
            (e = aD.indexOf(')', aD.length - e) - aD.length)
          ) {
            i[0] = i[0].slice(0, e);
            i[2] = aD.slice(0, e);
          }
        }
        return i.slice(0, 3);
      },
    },
    filter: {
      TAG: function (i) {
        var e = i.replace(y, ak).toLowerCase();
        return i === '*'
          ? function () {
              return true;
            }
          : function (aD) {
              return aD.nodeName && aD.nodeName.toLowerCase() === e;
            };
      },
      CLASS: function (e) {
        var i = d[e + ' '];
        return (
          i ||
          ((i = new RegExp('(^|' + v + ')' + e + '(' + v + '|$)')) &&
            d(e, function (aD) {
              return i.test(
                (typeof aD.className === 'string' && aD.className) ||
                  (typeof aD.getAttribute !== au && aD.getAttribute('class')) ||
                  ''
              );
            }))
        );
      },
      ATTR: function (aD, i, e) {
        return function (aF) {
          var aE = B.attr(aF, aD);
          if (aE == null) {
            return i === '!=';
          }
          if (!i) {
            return true;
          }
          aE += '';
          return i === '='
            ? aE === e
            : i === '!='
            ? aE !== e
            : i === '^='
            ? e && aE.indexOf(e) === 0
            : i === '*='
            ? e && aE.indexOf(e) > -1
            : i === '$='
            ? e && aE.slice(-e.length) === e
            : i === '~='
            ? (' ' + aE + ' ').indexOf(e) > -1
            : i === '|='
            ? aE === e || aE.slice(0, e.length + 1) === e + '-'
            : false;
        };
      },
      CHILD: function (i, aF, aE, aG, aD) {
        var aI = i.slice(0, 3) !== 'nth',
          e = i.slice(-4) !== 'last',
          aH = aF === 'of-type';
        return aG === 1 && aD === 0
          ? function (aJ) {
              return !!aJ.parentNode;
            }
          : function (aP, aN, aS) {
              var aJ,
                aV,
                aQ,
                aU,
                aR,
                aM,
                aO = aI !== e ? 'nextSibling' : 'previousSibling',
                aT = aP.parentNode,
                aL = aH && aP.nodeName.toLowerCase(),
                aK = !aS && !aH;
              if (aT) {
                if (aI) {
                  while (aO) {
                    aQ = aP;
                    while ((aQ = aQ[aO])) {
                      if (
                        aH
                          ? aQ.nodeName.toLowerCase() === aL
                          : aQ.nodeType === 1
                      ) {
                        return false;
                      }
                    }
                    aM = aO = i === 'only' && !aM && 'nextSibling';
                  }
                  return true;
                }
                aM = [e ? aT.firstChild : aT.lastChild];
                if (e && aK) {
                  aV = aT[ap] || (aT[ap] = {});
                  aJ = aV[i] || [];
                  aR = aJ[0] === az && aJ[1];
                  aU = aJ[0] === az && aJ[2];
                  aQ = aR && aT.childNodes[aR];
                  while (
                    (aQ = (++aR && aQ && aQ[aO]) || (aU = aR = 0) || aM.pop())
                  ) {
                    if (aQ.nodeType === 1 && ++aU && aQ === aP) {
                      aV[i] = [az, aR, aU];
                      break;
                    }
                  }
                } else {
                  if (
                    aK &&
                    (aJ = (aP[ap] || (aP[ap] = {}))[i]) &&
                    aJ[0] === az
                  ) {
                    aU = aJ[1];
                  } else {
                    while (
                      (aQ = (++aR && aQ && aQ[aO]) || (aU = aR = 0) || aM.pop())
                    ) {
                      if (
                        (aH
                          ? aQ.nodeName.toLowerCase() === aL
                          : aQ.nodeType === 1) &&
                        ++aU
                      ) {
                        if (aK) {
                          (aQ[ap] || (aQ[ap] = {}))[i] = [az, aU];
                        }
                        if (aQ === aP) {
                          break;
                        }
                      }
                    }
                  }
                }
                aU -= aD;
                return aU === aG || (aU % aG === 0 && aU / aG >= 0);
              }
            };
      },
      PSEUDO: function (aE, aD) {
        var e,
          i =
            t.pseudos[aE] ||
            t.setFilters[aE.toLowerCase()] ||
            B.error('unsupported pseudo: ' + aE);
        if (i[ap]) {
          return i(aD);
        }
        if (i.length > 1) {
          e = [aE, aE, '', aD];
          return t.setFilters.hasOwnProperty(aE.toLowerCase())
            ? p(function (aH, aJ) {
                var aG,
                  aF = i(aH, aD),
                  aI = aF.length;
                while (aI--) {
                  aG = j.call(aH, aF[aI]);
                  aH[aG] = !(aJ[aG] = aF[aI]);
                }
              })
            : function (aF) {
                return i(aF, 0, e);
              };
        }
        return i;
      },
    },
    pseudos: {
      not: p(function (e) {
        var i = [],
          aD = [],
          aE = ab(e.replace(x, '$1'));
        return aE[ap]
          ? p(function (aG, aL, aJ, aH) {
              var aK,
                aF = aE(aG, null, aH, []),
                aI = aG.length;
              while (aI--) {
                if ((aK = aF[aI])) {
                  aG[aI] = !(aL[aI] = aK);
                }
              }
            })
          : function (aH, aG, aF) {
              i[0] = aH;
              aE(i, null, aF, aD);
              return !aD.pop();
            };
      }),
      has: p(function (e) {
        return function (i) {
          return B(e, i).length > 0;
        };
      }),
      contains: p(function (e) {
        return function (i) {
          return (i.textContent || i.innerText || M(i)).indexOf(e) > -1;
        };
      }),
      lang: p(function (e) {
        if (!Z.test(e || '')) {
          B.error('unsupported lang: ' + e);
        }
        e = e.replace(y, ak).toLowerCase();
        return function (aD) {
          var i;
          do {
            if (
              (i = an
                ? aD.lang
                : aD.getAttribute('xml:lang') || aD.getAttribute('lang'))
            ) {
              i = i.toLowerCase();
              return i === e || i.indexOf(e + '-') === 0;
            }
          } while ((aD = aD.parentNode) && aD.nodeType === 1);
          return false;
        };
      }),
      target: function (e) {
        var i = av.location && av.location.hash;
        return i && i.slice(1) === e.id;
      },
      root: function (e) {
        return e === u;
      },
      focus: function (e) {
        return (
          e === H.activeElement &&
          (!H.hasFocus || H.hasFocus()) &&
          !!(e.type || e.href || ~e.tabIndex)
        );
      },
      enabled: function (e) {
        return e.disabled === false;
      },
      disabled: function (e) {
        return e.disabled === true;
      },
      checked: function (e) {
        var i = e.nodeName.toLowerCase();
        return (
          (i === 'input' && !!e.checked) || (i === 'option' && !!e.selected)
        );
      },
      selected: function (e) {
        if (e.parentNode) {
          e.parentNode.selectedIndex;
        }
        return e.selected === true;
      },
      empty: function (e) {
        for (e = e.firstChild; e; e = e.nextSibling) {
          if (e.nodeType < 6) {
            return false;
          }
        }
        return true;
      },
      parent: function (e) {
        return !t.pseudos.empty(e);
      },
      header: function (e) {
        return r.test(e.nodeName);
      },
      input: function (e) {
        return h.test(e.nodeName);
      },
      button: function (i) {
        var e = i.nodeName.toLowerCase();
        return (e === 'input' && i.type === 'button') || e === 'button';
      },
      text: function (i) {
        var e;
        return (
          i.nodeName.toLowerCase() === 'input' &&
          i.type === 'text' &&
          ((e = i.getAttribute('type')) == null || e.toLowerCase() === 'text')
        );
      },
      first: am(function () {
        return [0];
      }),
      last: am(function (e, i) {
        return [i - 1];
      }),
      eq: am(function (e, aD, i) {
        return [i < 0 ? i + aD : i];
      }),
      even: am(function (e, aE) {
        var aD = 0;
        for (; aD < aE; aD += 2) {
          e.push(aD);
        }
        return e;
      }),
      odd: am(function (e, aE) {
        var aD = 1;
        for (; aD < aE; aD += 2) {
          e.push(aD);
        }
        return e;
      }),
      lt: am(function (e, aF, aE) {
        var aD = aE < 0 ? aE + aF : aE;
        for (; --aD >= 0; ) {
          e.push(aD);
        }
        return e;
      }),
      gt: am(function (e, aF, aE) {
        var aD = aE < 0 ? aE + aF : aE;
        for (; ++aD < aF; ) {
          e.push(aD);
        }
        return e;
      }),
    },
  };
  t.pseudos.nth = t.pseudos.eq;
  for (D in {
    radio: true,
    checkbox: true,
    file: true,
    password: true,
    image: true,
  }) {
    t.pseudos[D] = C(D);
  }
  for (D in { submit: true, reset: true }) {
    t.pseudos[D] = g(D);
  }
  function aa() {}
  aa.prototype = t.filters = t.pseudos;
  t.setFilters = new aa();
  function n(aF, aK) {
    var i,
      aG,
      aI,
      aJ,
      aH,
      aD,
      e,
      aE = ao[aF + ' '];
    if (aE) {
      return aK ? 0 : aE.slice(0);
    }
    aH = aF;
    aD = [];
    e = t.preFilter;
    while (aH) {
      if (!i || (aG = A.exec(aH))) {
        if (aG) {
          aH = aH.slice(aG[0].length) || aH;
        }
        aD.push((aI = []));
      }
      i = false;
      if ((aG = G.exec(aH))) {
        i = aG.shift();
        aI.push({ value: i, type: aG[0].replace(x, ' ') });
        aH = aH.slice(i.length);
      }
      for (aJ in t.filter) {
        if ((aG = ah[aJ].exec(aH)) && (!e[aJ] || (aG = e[aJ](aG)))) {
          i = aG.shift();
          aI.push({ value: i, type: aJ, matches: aG });
          aH = aH.slice(i.length);
        }
      }
      if (!i) {
        break;
      }
    }
    return aK ? aH.length : aH ? B.error(aF) : ao(aF, aD).slice(0);
  }
  function o(aF) {
    var aE = 0,
      aD = aF.length,
      e = '';
    for (; aE < aD; aE++) {
      e += aF[aE].value;
    }
    return e;
  }
  function w(aF, aD, aE) {
    var e = aD.dir,
      aG = aE && e === 'parentNode',
      i = aj++;
    return aD.first
      ? function (aJ, aI, aH) {
          while ((aJ = aJ[e])) {
            if (aJ.nodeType === 1 || aG) {
              return aF(aJ, aI, aH);
            }
          }
        }
      : function (aL, aJ, aI) {
          var aM,
            aK,
            aH = [az, i];
          if (aI) {
            while ((aL = aL[e])) {
              if (aL.nodeType === 1 || aG) {
                if (aF(aL, aJ, aI)) {
                  return true;
                }
              }
            }
          } else {
            while ((aL = aL[e])) {
              if (aL.nodeType === 1 || aG) {
                aK = aL[ap] || (aL[ap] = {});
                if ((aM = aK[e]) && aM[0] === az && aM[1] === i) {
                  return (aH[2] = aM[2]);
                } else {
                  aK[e] = aH;
                  if ((aH[2] = aF(aL, aJ, aI))) {
                    return true;
                  }
                }
              }
            }
          }
        };
  }
  function aB(e) {
    return e.length > 1
      ? function (aG, aF, aD) {
          var aE = e.length;
          while (aE--) {
            if (!e[aE](aG, aF, aD)) {
              return false;
            }
          }
          return true;
        }
      : e[0];
  }
  function E(aD, aG, aF) {
    var aE = 0,
      e = aG.length;
    for (; aE < e; aE++) {
      B(aD, aG[aE], aF);
    }
    return aF;
  }
  function af(e, aD, aE, aF, aI) {
    var aG,
      aL = [],
      aH = 0,
      aJ = e.length,
      aK = aD != null;
    for (; aH < aJ; aH++) {
      if ((aG = e[aH])) {
        if (!aE || aE(aG, aF, aI)) {
          aL.push(aG);
          if (aK) {
            aD.push(aH);
          }
        }
      }
    }
    return aL;
  }
  function m(aD, i, aF, aE, aG, e) {
    if (aE && !aE[ap]) {
      aE = m(aE);
    }
    if (aG && !aG[ap]) {
      aG = m(aG, e);
    }
    return p(function (aR, aO, aJ, aQ) {
      var aT,
        aP,
        aL,
        aK = [],
        aS = [],
        aI = aO.length,
        aH = aR || E(i || '*', aJ.nodeType ? [aJ] : aJ, []),
        aM = aD && (aR || !i) ? af(aH, aK, aD, aJ, aQ) : aH,
        aN = aF ? (aG || (aR ? aD : aI || aE) ? [] : aO) : aM;
      if (aF) {
        aF(aM, aN, aJ, aQ);
      }
      if (aE) {
        aT = af(aN, aS);
        aE(aT, [], aJ, aQ);
        aP = aT.length;
        while (aP--) {
          if ((aL = aT[aP])) {
            aN[aS[aP]] = !(aM[aS[aP]] = aL);
          }
        }
      }
      if (aR) {
        if (aG || aD) {
          if (aG) {
            aT = [];
            aP = aN.length;
            while (aP--) {
              if ((aL = aN[aP])) {
                aT.push((aM[aP] = aL));
              }
            }
            aG(null, (aN = []), aT, aQ);
          }
          aP = aN.length;
          while (aP--) {
            if ((aL = aN[aP]) && (aT = aG ? j.call(aR, aL) : aK[aP]) > -1) {
              aR[aT] = !(aO[aT] = aL);
            }
          }
        }
      } else {
        aN = af(aN === aO ? aN.splice(aI, aN.length) : aN);
        if (aG) {
          aG(null, aO, aN, aQ);
        } else {
          b.apply(aO, aN);
        }
      }
    });
  }
  function aq(aI) {
    var aD,
      aG,
      aE,
      aH = aI.length,
      aL = t.relative[aI[0].type],
      aM = aL || t.relative[' '],
      aF = aL ? 1 : 0,
      aJ = w(
        function (i) {
          return i === aD;
        },
        aM,
        true
      ),
      aK = w(
        function (i) {
          return j.call(aD, i) > -1;
        },
        aM,
        true
      ),
      e = [
        function (aO, aN, i) {
          return (
            (!aL && (i || aN !== aC)) ||
            ((aD = aN).nodeType ? aJ(aO, aN, i) : aK(aO, aN, i))
          );
        },
      ];
    for (; aF < aH; aF++) {
      if ((aG = t.relative[aI[aF].type])) {
        e = [w(aB(e), aG)];
      } else {
        aG = t.filter[aI[aF].type].apply(null, aI[aF].matches);
        if (aG[ap]) {
          aE = ++aF;
          for (; aE < aH; aE++) {
            if (t.relative[aI[aE].type]) {
              break;
            }
          }
          return m(
            aF > 1 && aB(e),
            aF > 1 &&
              o(
                aI
                  .slice(0, aF - 1)
                  .concat({ value: aI[aF - 2].type === ' ' ? '*' : '' })
              ).replace(x, '$1'),
            aG,
            aF < aE && aq(aI.slice(aF, aE)),
            aE < aH && aq((aI = aI.slice(aE))),
            aE < aH && o(aI)
          );
        }
        e.push(aG);
      }
    }
    return aB(e);
  }
  function ad(aE, aD) {
    var e = aD.length > 0,
      aF = aE.length > 0,
      i = function (aP, aJ, aO, aN, aS) {
        var aK,
          aL,
          aQ,
          aU = 0,
          aM = '0',
          aG = aP && [],
          aV = [],
          aT = aC,
          aI = aP || (aF && t.find.TAG('*', aS)),
          aH = (az += aT == null ? 1 : Math.random() || 0.1),
          aR = aI.length;
        if (aS) {
          aC = aJ !== H && aJ;
        }
        for (; aM !== aR && (aK = aI[aM]) != null; aM++) {
          if (aF && aK) {
            aL = 0;
            while ((aQ = aE[aL++])) {
              if (aQ(aK, aJ, aO)) {
                aN.push(aK);
                break;
              }
            }
            if (aS) {
              az = aH;
            }
          }
          if (e) {
            if ((aK = !aQ && aK)) {
              aU--;
            }
            if (aP) {
              aG.push(aK);
            }
          }
        }
        aU += aM;
        if (e && aM !== aU) {
          aL = 0;
          while ((aQ = aD[aL++])) {
            aQ(aG, aV, aJ, aO);
          }
          if (aP) {
            if (aU > 0) {
              while (aM--) {
                if (!(aG[aM] || aV[aM])) {
                  aV[aM] = at.call(aN);
                }
              }
            }
            aV = af(aV);
          }
          b.apply(aN, aV);
          if (aS && !aP && aV.length > 0 && aU + aD.length > 1) {
            B.uniqueSort(aN);
          }
        }
        if (aS) {
          az = aH;
          aC = aT;
        }
        return aG;
      };
    return e ? p(i) : i;
  }
  ab = B.compile = function (e, aE) {
    var aF,
      aD = [],
      aH = [],
      aG = L[e + ' '];
    if (!aG) {
      if (!aE) {
        aE = n(e);
      }
      aF = aE.length;
      while (aF--) {
        aG = aq(aE[aF]);
        if (aG[ap]) {
          aD.push(aG);
        } else {
          aH.push(aG);
        }
      }
      aG = L(e, ad(aH, aD));
      aG.selector = e;
    }
    return aG;
  };
  ax = B.select = function (aE, e, aF, aI) {
    var aG,
      aL,
      aD,
      aM,
      aJ,
      aK = typeof aE === 'function' && aE,
      aH = !aI && n((aE = aK.selector || aE));
    aF = aF || [];
    if (aH.length === 1) {
      aL = aH[0] = aH[0].slice(0);
      if (
        aL.length > 2 &&
        (aD = aL[0]).type === 'ID' &&
        ay.getById &&
        e.nodeType === 9 &&
        an &&
        t.relative[aL[1].type]
      ) {
        e = (t.find.ID(aD.matches[0].replace(y, ak), e) || [])[0];
        if (!e) {
          return aF;
        } else {
          if (aK) {
            e = e.parentNode;
          }
        }
        aE = aE.slice(aL.shift().value.length);
      }
      aG = ah.needsContext.test(aE) ? 0 : aL.length;
      while (aG--) {
        aD = aL[aG];
        if (t.relative[(aM = aD.type)]) {
          break;
        }
        if ((aJ = t.find[aM])) {
          if (
            (aI = aJ(
              aD.matches[0].replace(y, ak),
              (ag.test(aL[0].type) && Y(e.parentNode)) || e
            ))
          ) {
            aL.splice(aG, 1);
            aE = aI.length && o(aL);
            if (!aE) {
              b.apply(aF, aI);
              return aF;
            }
            break;
          }
        }
      }
    }
    (aK || ab(aE, aH))(aI, e, !an, aF, (ag.test(aE) && Y(e.parentNode)) || e);
    return aF;
  };
  ay.sortStable = ap.split('').sort(J).join('') === ap;
  ay.detectDuplicates = !!ac;
  ae();
  ay.sortDetached = l(function (e) {
    return e.compareDocumentPosition(H.createElement('div')) & 1;
  });
  if (
    !l(function (e) {
      e.innerHTML = "<a href='#'></a>";
      return e.firstChild.getAttribute('href') === '#';
    })
  ) {
    aA('type|href|height|width', function (i, e, aD) {
      if (!aD) {
        return i.getAttribute(e, e.toLowerCase() === 'type' ? 1 : 2);
      }
    });
  }
  if (
    !ay.attributes ||
    !l(function (e) {
      e.innerHTML = '<input/>';
      e.firstChild.setAttribute('value', '');
      return e.firstChild.getAttribute('value') === '';
    })
  ) {
    aA('value', function (i, e, aD) {
      if (!aD && i.nodeName.toLowerCase() === 'input') {
        return i.defaultValue;
      }
    });
  }
  if (
    !l(function (e) {
      return e.getAttribute('disabled') == null;
    })
  ) {
    aA(c, function (i, e, aE) {
      var aD;
      if (!aE) {
        return i[e] === true
          ? e.toLowerCase()
          : (aD = i.getAttributeNode(e)) && aD.specified
          ? aD.value
          : null;
      }
    });
  }
  if (typeof define === 'function' && define.amd) {
    define(function () {
      return B;
    });
  } else {
    if (typeof module !== 'undefined' && module.exports) {
      module.exports = B;
    } else {
      av.Sizzle = B;
    }
  }
})(window);
(function () {
  if (typeof Sizzle !== 'undefined') {
    return;
  }
  if (typeof define !== 'undefined' && define.amd) {
    window.Sizzle = Prototype._actual_sizzle;
    window.define = Prototype._original_define;
    delete Prototype._actual_sizzle;
    delete Prototype._original_define;
  } else {
    if (typeof module !== 'undefined' && module.exports) {
      window.Sizzle = module.exports;
      module.exports = {};
    }
  }
})();
(function (c) {
  var d = Prototype.Selector.extendElements;
  function a(e, f) {
    return d(c(e, f || document));
  }
  function b(f, e) {
    return c.matches(e, [f]).length == 1;
  }
  Prototype.Selector.engine = c;
  Prototype.Selector.select = a;
  Prototype.Selector.match = b;
})(Sizzle);
window.Sizzle = Prototype._original_property;
delete Prototype._original_property;
var Form = {
  reset: function (a) {
    a = $(a);
    a.reset();
    return a;
  },
  serializeElements: function (h, d) {
    if (typeof d != 'object') {
      d = { hash: !!d };
    } else {
      if (Object.isUndefined(d.hash)) {
        d.hash = true;
      }
    }
    var e,
      g,
      a = false,
      f = d.submit,
      b,
      c;
    if (d.hash) {
      c = {};
      b = function (i, j, k) {
        if (j in i) {
          if (!Object.isArray(i[j])) {
            i[j] = [i[j]];
          }
          i[j] = i[j].concat(k);
        } else {
          i[j] = k;
        }
        return i;
      };
    } else {
      c = '';
      b = function (i, k, j) {
        if (!Object.isArray(j)) {
          j = [j];
        }
        if (!j.length) {
          return i;
        }
        var l = encodeURIComponent(k).gsub(/%20/, '+');
        return (
          i +
          (i ? '&' : '') +
          j
            .map(function (m) {
              m = m.gsub(/(\r)?\n/, '\r\n');
              m = encodeURIComponent(m);
              m = m.gsub(/%20/, '+');
              return l + '=' + m;
            })
            .join('&')
        );
      };
    }
    return h.inject(c, function (i, j) {
      if (!j.disabled && j.name) {
        e = j.name;
        g = $(j).getValue();
        if (
          g != null &&
          j.type != 'file' &&
          (j.type != 'submit' ||
            (!a && f !== false && (!f || e == f) && (a = true)))
        ) {
          i = b(i, e, g);
        }
      }
      return i;
    });
  },
};
Form.Methods = {
  serialize: function (b, a) {
    return Form.serializeElements(Form.getElements(b), a);
  },
  getElements: function (e) {
    var f = $(e).getElementsByTagName('*');
    var d,
      c = [],
      b = Form.Element.Serializers;
    for (var a = 0; (d = f[a]); a++) {
      if (b[d.tagName.toLowerCase()]) {
        c.push(Element.extend(d));
      }
    }
    return c;
  },
  getInputs: function (g, c, d) {
    g = $(g);
    var a = g.getElementsByTagName('input');
    if (!c && !d) {
      return $A(a).map(Element.extend);
    }
    for (var e = 0, h = [], f = a.length; e < f; e++) {
      var b = a[e];
      if ((c && b.type != c) || (d && b.name != d)) {
        continue;
      }
      h.push(Element.extend(b));
    }
    return h;
  },
  disable: function (a) {
    a = $(a);
    Form.getElements(a).invoke('disable');
    return a;
  },
  enable: function (a) {
    a = $(a);
    Form.getElements(a).invoke('enable');
    return a;
  },
  findFirstElement: function (b) {
    var c = $(b)
      .getElements()
      .findAll(function (d) {
        return 'hidden' != d.type && !d.disabled;
      });
    var a = c
      .findAll(function (d) {
        return d.hasAttribute('tabIndex') && d.tabIndex >= 0;
      })
      .sortBy(function (d) {
        return d.tabIndex;
      })
      .first();
    return a
      ? a
      : c.find(function (d) {
          return /^(?:input|select|textarea)$/i.test(d.tagName);
        });
  },
  focusFirstElement: function (b) {
    b = $(b);
    var a = b.findFirstElement();
    if (a) {
      a.activate();
    }
    return b;
  },
  request: function (b, a) {
    (b = $(b)), (a = Object.clone(a || {}));
    var d = a.parameters,
      c = b.readAttribute('action') || '';
    if (c.blank()) {
      c = window.location.href;
    }
    a.parameters = b.serialize(true);
    if (d) {
      if (Object.isString(d)) {
        d = d.toQueryParams();
      }
      Object.extend(a.parameters, d);
    }
    if (b.hasAttribute('method') && !a.method) {
      a.method = b.method;
    }
    return new Ajax.Request(c, a);
  },
};
Form.Element = {
  focus: function (a) {
    $(a).focus();
    return a;
  },
  select: function (a) {
    $(a).select();
    return a;
  },
};
Form.Element.Methods = {
  serialize: function (a) {
    a = $(a);
    if (!a.disabled && a.name) {
      var b = a.getValue();
      if (b != undefined) {
        var c = {};
        c[a.name] = b;
        return Object.toQueryString(c);
      }
    }
    return '';
  },
  getValue: function (a) {
    a = $(a);
    var b = a.tagName.toLowerCase();
    return Form.Element.Serializers[b](a);
  },
  setValue: function (a, b) {
    a = $(a);
    var c = a.tagName.toLowerCase();
    Form.Element.Serializers[c](a, b);
    return a;
  },
  clear: function (a) {
    $(a).value = '';
    return a;
  },
  present: function (a) {
    return $(a).value != '';
  },
  activate: function (a) {
    a = $(a);
    try {
      a.focus();
      if (
        a.select &&
        (a.tagName.toLowerCase() != 'input' ||
          !/^(?:button|reset|submit)$/i.test(a.type))
      ) {
        a.select();
      }
    } catch (b) {}
    return a;
  },
  disable: function (a) {
    a = $(a);
    a.disabled = true;
    return a;
  },
  enable: function (a) {
    a = $(a);
    a.disabled = false;
    return a;
  },
};
var Field = Form.Element;
var $F = Form.Element.Methods.getValue;
Form.Element.Serializers = (function () {
  function b(h, i) {
    switch (h.type.toLowerCase()) {
      case 'checkbox':
      case 'radio':
        return f(h, i);
      default:
        return e(h, i);
    }
  }
  function f(h, i) {
    if (Object.isUndefined(i)) {
      return h.checked ? h.value : null;
    } else {
      h.checked = !!i;
    }
  }
  function e(h, i) {
    if (Object.isUndefined(i)) {
      return h.value;
    } else {
      h.value = i;
    }
  }
  function a(k, n) {
    if (Object.isUndefined(n)) {
      return (k.type === 'select-one' ? c : d)(k);
    }
    var j,
      l,
      o = !Object.isArray(n);
    for (var h = 0, m = k.length; h < m; h++) {
      j = k.options[h];
      l = this.optionValue(j);
      if (o) {
        if (l == n) {
          j.selected = true;
          return;
        }
      } else {
        j.selected = n.include(l);
      }
    }
  }
  function c(i) {
    var h = i.selectedIndex;
    return h >= 0 ? g(i.options[h]) : null;
  }
  function d(l) {
    var h,
      m = l.length;
    if (!m) {
      return null;
    }
    for (var k = 0, h = []; k < m; k++) {
      var j = l.options[k];
      if (j.selected) {
        h.push(g(j));
      }
    }
    return h;
  }
  function g(h) {
    return Element.hasAttribute(h, 'value') ? h.value : h.text;
  }
  return {
    input: b,
    inputSelector: f,
    textarea: e,
    select: a,
    selectOne: c,
    selectMany: d,
    optionValue: g,
    button: e,
  };
})();
Abstract.TimedObserver = Class.create(PeriodicalExecuter, {
  initialize: function ($super, a, b, c) {
    $super(c, b);
    this.element = $(a);
    this.lastValue = this.getValue();
  },
  execute: function () {
    var a = this.getValue();
    if (
      Object.isString(this.lastValue) && Object.isString(a)
        ? this.lastValue != a
        : String(this.lastValue) != String(a)
    ) {
      this.callback(this.element, a);
      this.lastValue = a;
    }
  },
});
Form.Element.Observer = Class.create(Abstract.TimedObserver, {
  getValue: function () {
    return Form.Element.getValue(this.element);
  },
});
Form.Observer = Class.create(Abstract.TimedObserver, {
  getValue: function () {
    return Form.serialize(this.element);
  },
});
Abstract.EventObserver = Class.create({
  initialize: function (a, b) {
    this.element = $(a);
    this.callback = b;
    this.lastValue = this.getValue();
    if (this.element.tagName.toLowerCase() == 'form') {
      this.registerFormCallbacks();
    } else {
      this.registerCallback(this.element);
    }
  },
  onElementEvent: function () {
    var a = this.getValue();
    if (this.lastValue != a) {
      this.callback(this.element, a);
      this.lastValue = a;
    }
  },
  registerFormCallbacks: function () {
    Form.getElements(this.element).each(this.registerCallback, this);
  },
  registerCallback: function (a) {
    if (a.type) {
      switch (a.type.toLowerCase()) {
        case 'checkbox':
        case 'radio':
          Event.observe(a, 'click', this.onElementEvent.bind(this));
          break;
        default:
          Event.observe(a, 'change', this.onElementEvent.bind(this));
          break;
      }
    }
  },
});
Form.Element.EventObserver = Class.create(Abstract.EventObserver, {
  getValue: function () {
    return Form.Element.getValue(this.element);
  },
});
Form.EventObserver = Class.create(Abstract.EventObserver, {
  getValue: function () {
    return Form.serialize(this.element);
  },
});
(function (D) {
  var u = document.createElement('div');
  var d = document.documentElement;
  var k = 'onmouseenter' in d && 'onmouseleave' in d;
  var L = {
    KEY_BACKSPACE: 8,
    KEY_TAB: 9,
    KEY_RETURN: 13,
    KEY_ESC: 27,
    KEY_LEFT: 37,
    KEY_UP: 38,
    KEY_RIGHT: 39,
    KEY_DOWN: 40,
    KEY_DELETE: 46,
    KEY_HOME: 36,
    KEY_END: 35,
    KEY_PAGEUP: 33,
    KEY_PAGEDOWN: 34,
    KEY_INSERT: 45,
  };
  var A = function (X) {
    return false;
  };
  if (window.attachEvent) {
    if (window.addEventListener) {
      A = function (X) {
        return !(X instanceof window.Event);
      };
    } else {
      A = function (X) {
        return true;
      };
    }
  }
  var O;
  function M(Y, X) {
    return Y.which ? Y.which === X + 1 : Y.button === X;
  }
  var W = { 0: 1, 1: 4, 2: 2 };
  function S(Y, X) {
    return Y.button === W[X];
  }
  function P(Y, X) {
    switch (X) {
      case 0:
        return Y.which == 1 && !Y.metaKey;
      case 1:
        return Y.which == 2 || (Y.which == 1 && Y.metaKey);
      case 2:
        return Y.which == 3;
      default:
        return false;
    }
  }
  if (window.attachEvent) {
    if (!window.addEventListener) {
      O = S;
    } else {
      O = function (Y, X) {
        return A(Y) ? S(Y, X) : M(Y, X);
      };
    }
  } else {
    if (Prototype.Browser.WebKit) {
      O = P;
    } else {
      O = M;
    }
  }
  function B(X) {
    return O(X, 0);
  }
  function i(X) {
    return O(X, 1);
  }
  function e(X) {
    return O(X, 2);
  }
  function o(X) {
    return Element.extend(K(X));
  }
  function K(Z) {
    Z = L.extend(Z);
    var Y = Z.target,
      X = Z.type,
      aa = Z.currentTarget;
    if (aa && aa.tagName) {
      if (
        X === 'load' ||
        X === 'error' ||
        (X === 'click' &&
          aa.tagName.toLowerCase() === 'input' &&
          aa.type === 'radio')
      ) {
        Y = aa;
      }
    }
    return Y.nodeType == Node.TEXT_NODE ? Y.parentNode : Y;
  }
  function j(Z, aa) {
    var Y = K(Z),
      X = Prototype.Selector;
    if (!aa) {
      return Element.extend(Y);
    }
    while (Y) {
      if (Object.isElement(Y) && X.match(Y, aa)) {
        return Element.extend(Y);
      }
      Y = Y.parentNode;
    }
  }
  function t(X) {
    return { x: U(X), y: T(X) };
  }
  function U(Z) {
    var Y = document.documentElement,
      X = document.body || { scrollLeft: 0 };
    return (
      Z.pageX ||
      Z.clientX + (Y.scrollLeft || X.scrollLeft) - (Y.clientLeft || 0)
    );
  }
  function T(Z) {
    var Y = document.documentElement,
      X = document.body || { scrollTop: 0 };
    return (
      Z.pageY || Z.clientY + (Y.scrollTop || X.scrollTop) - (Y.clientTop || 0)
    );
  }
  function r(X) {
    L.extend(X);
    X.preventDefault();
    X.stopPropagation();
    X.stopped = true;
  }
  L.Methods = {
    isLeftClick: B,
    isMiddleClick: i,
    isRightClick: e,
    element: o,
    findElement: j,
    pointer: t,
    pointerX: U,
    pointerY: T,
    stop: r,
  };
  var H = Object.keys(L.Methods).inject({}, function (X, Y) {
    X[Y] = L.Methods[Y].methodize();
    return X;
  });
  if (window.attachEvent) {
    function V(Y) {
      var X;
      switch (Y.type) {
        case 'mouseover':
        case 'mouseenter':
          X = Y.fromElement;
          break;
        case 'mouseout':
        case 'mouseleave':
          X = Y.toElement;
          break;
        default:
          return null;
      }
      return Element.extend(X);
    }
    var Q = {
      stopPropagation: function () {
        this.cancelBubble = true;
      },
      preventDefault: function () {
        this.returnValue = false;
      },
      inspect: function () {
        return '[object Event]';
      },
    };
    L.extend = function (Y, X) {
      if (!Y) {
        return false;
      }
      if (!A(Y)) {
        return Y;
      }
      if (Y._extendedByPrototype) {
        return Y;
      }
      Y._extendedByPrototype = Prototype.emptyFunction;
      var Z = L.pointer(Y);
      Object.extend(Y, {
        target: Y.srcElement || X,
        relatedTarget: V(Y),
        pageX: Z.x,
        pageY: Z.y,
      });
      Object.extend(Y, H);
      Object.extend(Y, Q);
      return Y;
    };
  } else {
    L.extend = Prototype.K;
  }
  if (window.addEventListener) {
    L.prototype =
      window.Event.prototype || document.createEvent('HTMLEvents').__proto__;
    Object.extend(L.prototype, H);
  }
  var v = { mouseenter: 'mouseover', mouseleave: 'mouseout' };
  function f(X) {
    return v[X] || X;
  }
  if (k) {
    f = Prototype.K;
  }
  function R(X) {
    if (X === window) {
      return 0;
    }
    if (typeof X._prototypeUID === 'undefined') {
      X._prototypeUID = Element.Storage.UID++;
    }
    return X._prototypeUID;
  }
  function I(X) {
    if (X === window) {
      return 0;
    }
    if (X == document) {
      return 1;
    }
    return X.uniqueID;
  }
  if ('uniqueID' in u) {
    R = I;
  }
  function x(X) {
    return X.include(':');
  }
  L._isCustomEvent = x;
  function z(Z, Y) {
    var X = D.Event.cache;
    if (Object.isUndefined(Y)) {
      Y = R(Z);
    }
    if (!X[Y]) {
      X[Y] = { element: Z };
    }
    return X[Y];
  }
  function E(Y, X) {
    if (Object.isUndefined(X)) {
      X = R(Y);
    }
    delete D.Event.cache[X];
  }
  function h(Z, ac, af) {
    var X = z(Z);
    if (!X[ac]) {
      X[ac] = [];
    }
    var ab = X[ac];
    var aa = ab.length;
    while (aa--) {
      if (ab[aa].handler === af) {
        return null;
      }
    }
    var ad = R(Z);
    var Y = D.Event._createResponder(ad, ac, af);
    var ae = { responder: Y, handler: af };
    ab.push(ae);
    return ae;
  }
  function s(ac, Z, ad) {
    var Y = z(ac);
    var X = Y[Z] || [];
    var ab = X.length,
      ae;
    while (ab--) {
      if (X[ab].handler === ad) {
        ae = X[ab];
        break;
      }
    }
    if (ae) {
      var aa = X.indexOf(ae);
      X.splice(aa, 1);
    }
    if (X.length === 0) {
      delete Y[Z];
      if (Object.keys(Y).length === 1 && 'element' in Y) {
        E(ac);
      }
    }
    return ae;
  }
  function c(Z, Y, aa) {
    Z = $(Z);
    var ab = h(Z, Y, aa);
    if (ab === null) {
      return Z;
    }
    var X = ab.responder;
    if (x(Y)) {
      p(Z, Y, X);
    } else {
      m(Z, Y, X);
    }
    return Z;
  }
  function m(aa, Z, Y) {
    var X = f(Z);
    if (aa.addEventListener) {
      aa.addEventListener(X, Y, false);
    } else {
      aa.attachEvent('on' + X, Y);
    }
  }
  function p(Z, Y, X) {
    if (Z.addEventListener) {
      Z.addEventListener('dataavailable', X, false);
    } else {
      Z.attachEvent('ondataavailable', X);
      Z.attachEvent('onlosecapture', X);
    }
  }
  function J(Y, X, Z) {
    Y = $(Y);
    var ab = !Object.isUndefined(Z),
      ac = !Object.isUndefined(X);
    if (!ac && !ab) {
      y(Y);
      return Y;
    }
    if (!ab) {
      G(Y, X);
      return Y;
    }
    var aa = s(Y, X, Z);
    if (!aa) {
      return Y;
    }
    a(Y, X, aa.responder);
    return Y;
  }
  function C(aa, Z, Y) {
    var X = f(Z);
    if (aa.removeEventListener) {
      aa.removeEventListener(X, Y, false);
    } else {
      aa.detachEvent('on' + X, Y);
    }
  }
  function b(Z, Y, X) {
    if (Z.removeEventListener) {
      Z.removeEventListener('dataavailable', X, false);
    } else {
      Z.detachEvent('ondataavailable', X);
      Z.detachEvent('onlosecapture', X);
    }
  }
  function y(ac) {
    var ab = R(ac),
      Z = D.Event.cache[ab];
    if (!Z) {
      return;
    }
    E(ac, ab);
    var X, aa;
    for (var Y in Z) {
      if (Y === 'element') {
        continue;
      }
      X = Z[Y];
      aa = X.length;
      while (aa--) {
        a(ac, Y, X[aa].responder);
      }
    }
  }
  function G(ac, Z) {
    var Y = z(ac);
    var X = Y[Z];
    if (X) {
      delete Y[Z];
    }
    X = X || [];
    var ab = X.length;
    while (ab--) {
      a(ac, Z, X[ab].responder);
    }
    for (var aa in Y) {
      if (aa === 'element') {
        continue;
      }
      return;
    }
    E(ac);
  }
  function a(Y, X, Z) {
    if (x(X)) {
      b(Y, X, Z);
    } else {
      C(Y, X, Z);
    }
  }
  function g(X) {
    if (X !== document) {
      return X;
    }
    if (document.createEvent && !X.dispatchEvent) {
      return document.documentElement;
    }
    return X;
  }
  function w(aa, Z, Y, X) {
    aa = g($(aa));
    if (Object.isUndefined(X)) {
      X = true;
    }
    Y = Y || {};
    var ab = N(aa, Z, Y, X);
    return L.extend(ab);
  }
  function l(aa, Z, Y, X) {
    var ab = document.createEvent('HTMLEvents');
    ab.initEvent('dataavailable', X, true);
    ab.eventName = Z;
    ab.memo = Y;
    aa.dispatchEvent(ab);
    return ab;
  }
  function n(aa, Z, Y, X) {
    var ab = document.createEventObject();
    ab.eventType = X ? 'ondataavailable' : 'onlosecapture';
    ab.eventName = Z;
    ab.memo = Y;
    aa.fireEvent(ab.eventType, ab);
    return ab;
  }
  var N = document.createEvent ? l : n;
  L.Handler = Class.create({
    initialize: function (Z, Y, X, aa) {
      this.element = $(Z);
      this.eventName = Y;
      this.selector = X;
      this.callback = aa;
      this.handler = this.handleEvent.bind(this);
    },
    start: function () {
      L.observe(this.element, this.eventName, this.handler);
      return this;
    },
    stop: function () {
      L.stopObserving(this.element, this.eventName, this.handler);
      return this;
    },
    handleEvent: function (Y) {
      var X = L.findElement(Y, this.selector);
      if (X) {
        this.callback.call(this.element, Y, X);
      }
    },
  });
  function F(Z, Y, X, aa) {
    Z = $(Z);
    if (Object.isFunction(X) && Object.isUndefined(aa)) {
      (aa = X), (X = null);
    }
    return new L.Handler(Z, Y, X, aa).start();
  }
  Object.extend(L, L.Methods);
  Object.extend(L, { fire: w, observe: c, stopObserving: J, on: F });
  Element.addMethods({ fire: w, observe: c, stopObserving: J, on: F });
  Object.extend(document, {
    fire: w.methodize(),
    observe: c.methodize(),
    stopObserving: J.methodize(),
    on: F.methodize(),
    loaded: false,
  });
  if (D.Event) {
    Object.extend(window.Event, L);
  } else {
    D.Event = L;
  }
  D.Event.cache = {};
  function q() {
    D.Event.cache = null;
  }
  if (window.attachEvent) {
    window.attachEvent('onunload', q);
  }
  u = null;
  d = null;
})(this);
(function (c) {
  var g = document.documentElement;
  var b = 'onmouseenter' in g && 'onmouseleave' in g;
  function f(h) {
    return !b && (h === 'mouseenter' || h === 'mouseleave');
  }
  function d(i, h, j) {
    if (Event._isCustomEvent(h)) {
      return e(i, h, j);
    }
    if (f(h)) {
      return a(i, h, j);
    }
    return function (l) {
      if (!Event.cache) {
        return;
      }
      var k = Event.cache[i].element;
      Event.extend(l, k);
      j.call(k, l);
    };
  }
  function e(i, h, j) {
    return function (m) {
      var k = Event.cache[i];
      var l = k && k.element;
      if (Object.isUndefined(m.eventName)) {
        return false;
      }
      if (m.eventName !== h) {
        return false;
      }
      Event.extend(m, l);
      j.call(l, m);
    };
  }
  function a(i, h, j) {
    return function (m) {
      var k = Event.cache[i].element;
      Event.extend(m, k);
      var l = m.relatedTarget;
      while (l && l !== k) {
        try {
          l = l.parentNode;
        } catch (n) {
          l = k;
        }
      }
      if (l === k) {
        return;
      }
      j.call(k, m);
    };
  }
  c.Event._createResponder = d;
  g = null;
})(this);
(function (a) {
  var e;
  function b() {
    if (document.loaded) {
      return;
    }
    if (e) {
      window.clearTimeout(e);
    }
    document.loaded = true;
    document.fire('dom:loaded');
  }
  function d() {
    if (document.readyState === 'complete') {
      document.detachEvent('onreadystatechange', d);
      b();
    }
  }
  function c() {
    try {
      document.documentElement.doScroll('left');
    } catch (f) {
      e = c.defer();
      return;
    }
    b();
  }
  if (document.readyState === 'complete') {
    b();
    return;
  }
  if (document.addEventListener) {
    document.addEventListener('DOMContentLoaded', b, false);
  } else {
    document.attachEvent('onreadystatechange', d);
    if (window == top) {
      e = c.defer();
    }
  }
  Event.observe(window, 'load', b);
})(this);
Element.addMethods();
Hash.toQueryString = Object.toQueryString;
var Toggle = { display: Element.toggle };
Element.addMethods({ childOf: Element.Methods.descendantOf });
var Insertion = {
  Before: function (a, b) {
    return Element.insert(a, { before: b });
  },
  Top: function (a, b) {
    return Element.insert(a, { top: b });
  },
  Bottom: function (a, b) {
    return Element.insert(a, { bottom: b });
  },
  After: function (a, b) {
    return Element.insert(a, { after: b });
  },
};
var $continue = new Error(
  '"throw $continue" is deprecated, use "return" instead'
);
var Position = {
  includeScrollOffsets: false,
  prepare: function () {
    this.deltaX =
      window.pageXOffset ||
      document.documentElement.scrollLeft ||
      document.body.scrollLeft ||
      0;
    this.deltaY =
      window.pageYOffset ||
      document.documentElement.scrollTop ||
      document.body.scrollTop ||
      0;
  },
  within: function (b, a, c) {
    if (this.includeScrollOffsets) {
      return this.withinIncludingScrolloffsets(b, a, c);
    }
    this.xcomp = a;
    this.ycomp = c;
    this.offset = Element.cumulativeOffset(b);
    return (
      c >= this.offset[1] &&
      c < this.offset[1] + b.offsetHeight &&
      a >= this.offset[0] &&
      a < this.offset[0] + b.offsetWidth
    );
  },
  withinIncludingScrolloffsets: function (b, a, d) {
    var c = Element.cumulativeScrollOffset(b);
    this.xcomp = a + c[0] - this.deltaX;
    this.ycomp = d + c[1] - this.deltaY;
    this.offset = Element.cumulativeOffset(b);
    return (
      this.ycomp >= this.offset[1] &&
      this.ycomp < this.offset[1] + b.offsetHeight &&
      this.xcomp >= this.offset[0] &&
      this.xcomp < this.offset[0] + b.offsetWidth
    );
  },
  overlap: function (b, a) {
    if (!b) {
      return 0;
    }
    if (b == 'vertical') {
      return (this.offset[1] + a.offsetHeight - this.ycomp) / a.offsetHeight;
    }
    if (b == 'horizontal') {
      return (this.offset[0] + a.offsetWidth - this.xcomp) / a.offsetWidth;
    }
  },
  cumulativeOffset: Element.Methods.cumulativeOffset,
  positionedOffset: Element.Methods.positionedOffset,
  absolutize: function (a) {
    Position.prepare();
    return Element.absolutize(a);
  },
  relativize: function (a) {
    Position.prepare();
    return Element.relativize(a);
  },
  realOffset: Element.Methods.cumulativeScrollOffset,
  offsetParent: Element.Methods.getOffsetParent,
  page: Element.Methods.viewportOffset,
  clone: function (b, c, a) {
    a = a || {};
    return Element.clonePosition(c, b, a);
  },
};
if (!document.getElementsByClassName) {
  document.getElementsByClassName = (function (b) {
    function a(c) {
      return c.blank()
        ? null
        : "[contains(concat(' ', @class, ' '), ' " + c + " ')]";
    }
    b.getElementsByClassName = Prototype.BrowserFeatures.XPath
      ? function (c, e) {
          e = e.toString().strip();
          var d = /\s/.test(e) ? $w(e).map(a).join('') : a(e);
          return d ? document._getElementsByXPath('.//*' + d, c) : [];
        }
      : function (e, f) {
          f = f.toString().strip();
          var g = [],
            h = /\s/.test(f) ? $w(f) : null;
          if (!h && !f) {
            return g;
          }
          var c = $(e).getElementsByTagName('*');
          f = ' ' + f + ' ';
          for (var d = 0, k, j; (k = c[d]); d++) {
            if (
              k.className &&
              (j = ' ' + k.className + ' ') &&
              (j.include(f) ||
                (h &&
                  h.all(function (i) {
                    return !i.toString().blank() && j.include(' ' + i + ' ');
                  })))
            ) {
              g.push(Element.extend(k));
            }
          }
          return g;
        };
    return function (d, c) {
      return $(c || document.body).getElementsByClassName(d);
    };
  })(Element.Methods);
}
Element.ClassNames = Class.create();
Element.ClassNames.prototype = {
  initialize: function (a) {
    this.element = $(a);
  },
  _each: function (b, a) {
    this.element.className
      .split(/\s+/)
      .select(function (c) {
        return c.length > 0;
      })
      ._each(b, a);
  },
  set: function (a) {
    this.element.className = a;
  },
  add: function (a) {
    if (this.include(a)) {
      return;
    }
    this.set($A(this).concat(a).join(' '));
  },
  remove: function (a) {
    if (!this.include(a)) {
      return;
    }
    this.set($A(this).without(a).join(' '));
  },
  toString: function () {
    return $A(this).join(' ');
  },
};
Object.extend(Element.ClassNames.prototype, Enumerable);
(function () {
  window.Selector = Class.create({
    initialize: function (a) {
      this.expression = a.strip();
    },
    findElements: function (a) {
      return Prototype.Selector.select(this.expression, a);
    },
    match: function (a) {
      return Prototype.Selector.match(a, this.expression);
    },
    toString: function () {
      return this.expression;
    },
    inspect: function () {
      return '#<Selector: ' + this.expression + '>';
    },
  });
  Object.extend(Selector, {
    matchElements: function (f, g) {
      var a = Prototype.Selector.match,
        d = [];
      for (var c = 0, e = f.length; c < e; c++) {
        var b = f[c];
        if (a(b, g)) {
          d.push(Element.extend(b));
        }
      }
      return d;
    },
    findElement: function (f, g, b) {
      b = b || 0;
      var a = 0,
        d;
      for (var c = 0, e = f.length; c < e; c++) {
        d = f[c];
        if (Prototype.Selector.match(d, g) && b === a++) {
          return Element.extend(d);
        }
      }
    },
    findChildElements: function (b, c) {
      var a = c.toArray().join(', ');
      return Prototype.Selector.select(a, b || document);
    },
  });
})();
